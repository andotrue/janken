<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Input name="TabletDebug/message" type="0" type_size="1" nature="4" stm_value_name="TabletDebug/message" inner="1" tooltip="TabletDebug/message desc" id="4" />
        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="5" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="84.0896">
                        <Box name="INIT" id="4" localization="8" tooltip="こちらに概要を記入" x="223" y="31">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="WakeUp_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="WakeUp" id="6" localization="0" tooltip="Call a Wake Up process.&#x0A;Stiff all joints and apply stand Init posture if the robot is Stand" x="387" y="18">
                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.motion.wakeUp()
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="Stop Script(2.3~)" id="2" localization="8" tooltip="Ver.2.0.0&#x0A;This box is to set ALife&apos;s breathing, Basic Awareness, Expressive Listening and Blinkings to off.&#x0A;[option]&#x0A;● Background Strategy&#x0A;Check to stop Alife breathing and Idle Posture.&#x0A;&#x0A;● Expressive Listenning&#x0A;Check to stop Expressive motion when pepper listenning.&#x0A;&#x0A;● Basic Awareness&#x0A;Check to stop Basi Awareness.&#x0A;&#x0A;● Autonomous Blinking&#x0A;Check to stop Pepper&apos;s Blinking" x="387" y="134">
                                                <bitmap>media/images/box/box-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        #~ puts code for box initialization here
        try:
            self.awareness = ALProxy("ALBasicAwareness")
        except:
            self.awareness = None
            self.logger.warning("ALBasicAwareness initialization failed.")
        try:
            self.autonomousMoves = ALProxy("ALAutonomousMoves")
        except:
            self.autonomousMoves = None
            self.logger.warning("ALAutonomousMoves initialization failed.")
        try:
            self.blinking = ALProxy("ALAutonomousBlinking")
        except:
            self.blinking = None
            self.logger.warning("ALAutonomousBlinking initialization failed.")

        self.setExpressive = None
        self.setBlinking = None
        pass

    def onUnload(self):
        #~ExpressiveListening and Blinking can't be set to default by ALife, need to set manual.
        if (self.setExpressive and self.autonomousMoves):
            self.autonomousMoves.setExpressiveListeningEnabled(self.setExpressive)
        if (self.blinking and self.setBlinking):
            self.blinking.setEnabled(self.setBlinking)
        self.setExpressive = None
        self.setBlinking = None
        pass

    def onInput_onStart(self):

        if (self.getParameter('Background Strategy') and self.autonomousMoves):
            self.autonomousMoves.setBackgroundStrategy("none")
            #Stop Breathing and Idle Postrue

        if (self.getParameter('Basic Awareness') and self.awareness):
            self.awareness.stopAwareness()
            #Stop Basic Awareness

        if (self.getParameter('Expressive Listenning') and self.autonomousMoves):
            self.setExpressive = self.autonomousMoves.getExpressiveListeningEnabled()
            self.logger.info("self.setExpressive = " +str(self.setExpressive))
            self.autonomousMoves.setExpressiveListeningEnabled(False)
            #Stop Expressive Listening

        if (self.getParameter('Autonomous Blinking') and self.blinking):
            self.setBlinking = self.blinking.isEnabled()
            self.logger.info("self.setBlinking = " +str(self.setBlinking))
            self.blinking.setEnabled(False)
            #Stop Blinking

        self.onStopped()



    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="Background Strategy" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="5" />
                                                <Parameter name="Expressive Listenning" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="6" />
                                                <Parameter name="Basic Awareness" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="7" />
                                                <Parameter name="Autonomous Blinking" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="8" />
                                            </Box>
                                            <Box name="Set Language" id="1" localization="8" tooltip="Select the language you would like the robot to speak and understand. Any following call to&#x0A;ALSpeechRecognition (Speech Reco. box for instance) or ALTextToSpeech (Say box&#x0A;for instance) will use this language." x="387" y="255">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.tts = ALProxy("ALTextToSpeech")
        except:
            self.logger.warn("ALTextToSpeech is not available, language setting cannot be applied to speech")
            self.tts = None

        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except:
            self.logger.warn("ALSpeechRecognition is not available, language setting cannot be applied to recognition")
            self.asr = None

        try:
            self.dialog = ALProxy("ALDialog")
        except:
            self.logger.warn("ALDialog is not available, language setting cannot be applied to dialog")
            self.dialog = None

    def onInput_onSet(self):
        lang = self.getParameter("Language")
        try:
            if self.asr:
                self.asr.setLanguage( self.getParameter("Language") )
            if self.tts:
                self.tts.setLanguage( self.getParameter("Language") )
            if self.dialog:
                self.dialog.setLanguage( self.getParameter("Language") )
            if self.tts is None and self.asr is None and self.dialog is None:
                raise RuntimeError("Cannot set language: neither ALTextToSpeech nor ALSpeechRecognition nor ALDialog is available.")
            self.onReady()
        except:
            error = "Language " + lang + " cannot be set."
            self.logger.warn(error)
            self.onError(error)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" />
                                                <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" />
                                                <Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" />
                                                <Parameter name="Language" inherits_from_parent="0" content_type="3" value="Japanese" default_value="English" custom_choice="1" tooltip="Set the language the robot speaks and understands." id="5">
                                                    <Choice value="Arabic" />
                                                    <Choice value="Brazilian" />
                                                    <Choice value="Chinese" />
                                                    <Choice value="Czech" />
                                                    <Choice value="Danish" />
                                                    <Choice value="Dutch" />
                                                    <Choice value="English" />
                                                    <Choice value="Finnish" />
                                                    <Choice value="French" />
                                                    <Choice value="German" />
                                                    <Choice value="Greek" />
                                                    <Choice value="Italian" />
                                                    <Choice value="Japanese" />
                                                    <Choice value="Korean" />
                                                    <Choice value="Norwegian" />
                                                    <Choice value="Polish" />
                                                    <Choice value="Portuguese" />
                                                    <Choice value="Russian" />
                                                    <Choice value="Spanish" />
                                                    <Choice value="Swedish" />
                                                    <Choice value="Turkish" />
                                                </Parameter>
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Show App" id="3" localization="8" tooltip="Loads the application on the tablet, if it exists, and displays the webview.&#x0A;&#x0A;V1.0.0&#x0A;" x="395" y="395">
                                                <bitmap>media/images/box/root.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.isRunning = False
        self.frameManager = None
        try:
            self.frameManager = ALProxy("ALFrameManager")
        except Exception as e:
            self.logger.error(e)

    def onUnload(self):
        self.isRunning = False

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAppName(self):
        import os
        if self.frameManager:
            behaviorPath = os.path.normpath(self.frameManager.getBehaviorPath(self.behaviorId))
            if os.path.isdir(behaviorPath):
               behaviorPath = os.path.join(behaviorPath, "")
            appsFolderFragment = os.path.join("PackageManager", "apps")
            if not (appsFolderFragment in behaviorPath):
                    self.logger.error("appsFolderFragment is not in behaviorPath")
                    return None
            fragment = behaviorPath.split(appsFolderFragment, 1)[1]
            return fragment.lstrip("\\/")
        else:
            self.logger.warning("No ALFrameManager")
            return None

    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        appName = self._getAppName()
        state = False
        if appName:
            if tabletService:
                if tabletService.loadApplication(appName):
                    self.logger.info("Successfully set application: %s" % appName)
                    tabletService.showWebview()
                    state = True
                else:
                    self.logger.warning("Got tablet service, but failed to set application: %s" % appName)
            else:
                self.logger.warning("Couldn't find tablet service, so can't set application: %s" % appName)
        if state:
            self.onSuccess()
        else:
            self.onFailure()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished successfully." id="3" />
                                                <Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished unsuccessfully." id="4" />
                                            </Box>
                                            <Box name="Change Threshold" id="4" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="396" y="511">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        proxy = ALProxy("ALDialog")
        proxy.setConfidenceThreshold('BNF', 0.42)
        ##proxy.setASRConfidenceThreshold(0.42)
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="Wait" id="5" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="632" y="214">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                            </Box>
                                            <Box name="Wait For Signals" id="7" localization="8" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="858" y="92">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
                                                <Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
                                                <Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
                                            </Box>
                                            <Box name="Basic Awareness" id="8" localization="8" tooltip="This box is an interface to the module ALBasicAwareness.&#x0A;&#x0A;It is a simple way to make the robot establish and keep eye contact with people.&#x0A;&#x0A;V1.1.0" x="188" y="516">
                                                <bitmap>media/images/box/tracker/basicawareness.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        try:
            self.awareness = ALProxy('ALBasicAwareness')
        except Exception as e:
            self.awareness = None
            self.logger.error(e)

        self.memory = ALProxy('ALMemory')

        self.isRunning = False
        self.trackedHuman = -1

        import threading
        self.subscribingLock = threading.Lock()

        self.BIND_PYTHON(self.getName(), "setParameter")


    def onUnload(self):
        if self.isRunning:
            if self.awareness:
                self.awareness.stopAwareness()
                self.setALMemorySubscription(False)
            self.isRunning = False


    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do

        self.isRunning = True
        self.trackedHuman = -1
        if self.awareness:
            self.awareness.setEngagementMode(self.getParameter('Engagement Mode'))
            self.awareness.setTrackingMode(self.getParameter('Tracking Mode'))
            self.awareness.setStimulusDetectionEnabled('Sound', self.getParameter('Sound Stimulus'))
            self.awareness.setStimulusDetectionEnabled('Movement', self.getParameter('Movement Stimulus'))
            self.awareness.setStimulusDetectionEnabled('People', self.getParameter('People Stimulus'))
            self.awareness.setStimulusDetectionEnabled('Touch', self.getParameter('Touch Stimulus'))
            self.setALMemorySubscription(True)
            self.awareness.startAwareness()



    def onInput_onStop(self):
        if not self.isRunning:
            return # already stopped, nothing to do

        self.onUnload()
        self.onStopped()


    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if self.awareness:
            if parameterName == 'Sound Stimulus':
                self.awareness.setStimulusDetectionEnabled('Sound', newValue)
            elif parameterName == 'Movement Stimulus':
                self.awareness.setStimulusDetectionEnabled('Movement', newValue)
            elif parameterName == 'People Stimulus':
                self.awareness.setStimulusDetectionEnabled('People', newValue)
            elif parameterName == 'Touch Stimulus':
                self.awareness.setStimulusDetectionEnabled('Touch', newValue)


    # callbacks for ALBasicAwareness events
    def onStimulusDetected(self, eventName, stimulusName, subscriberIdentifier):
        self.StimulusDetected(stimulusName)

    def onHumanTracked(self, eventName, humanID, subscriberIdentifier):
        self.trackedHuman = humanID
        self.HumanTracked(humanID)

    def onHumanLost(self, eventName, subscriberIdentifier):
        self.HumanLost(self.trackedHuman)
        self.trackedHuman = -1


    def setALMemorySubscription(self, subscribe):
        self.subscribingLock.acquire()
        if subscribe:
            self.memory.subscribeToEvent('ALBasicAwareness/StimulusDetected', self.getName(), 'onStimulusDetected')
            self.memory.subscribeToEvent('ALBasicAwareness/HumanTracked', self.getName(), 'onHumanTracked')
            self.memory.subscribeToEvent('ALBasicAwareness/HumanLost', self.getName(), 'onHumanLost')
        else:
            self.memory.unsubscribeToEvent('ALBasicAwareness/StimulusDetected', self.getName())
            self.memory.unsubscribeToEvent('ALBasicAwareness/HumanTracked', self.getName())
            self.memory.unsubscribeToEvent('ALBasicAwareness/HumanLost', self.getName())

        self.subscribingLock.release()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the Basic Awareness with the given Engagement and Tracking mode parameters, using the given stimuli." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the Basic Awareness." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="StimulusDetected" type="3" type_size="1" nature="2" inner="0" tooltip="This output is stimulated when BasicAwareness detects a stimulus amongst the tracked stimulus.&#x0A;&#x0A;The output data is the stimulus&apos; name." id="5" />
                                                <Output name="HumanTracked" type="2" type_size="1" nature="2" inner="0" tooltip="This output is triggered when ALBasicAwareness detects a stimulus that is confirmed to be a human.&#x0A;&#x0A;The output data is the ID corresponding to the tracked human. It is shared with PeoplePerception and can be used there. This output is triggered with -1 if ALBasicAwareness tried to detect a human but failed." id="6" />
                                                <Output name="HumanLost" type="2" type_size="1" nature="2" inner="0" tooltip="This output is triggered when the human currently tracked is lost.&#x0A;&#x0A; The output data is the ID corresponding to the lost human. It can be reused in PeoplePerception." id="7" />
                                                <Parameter name="Engagement Mode" inherits_from_parent="0" content_type="3" value="FullyEngaged" default_value="Unengaged" custom_choice="0" tooltip='The engagement mode specifies how &quot;focused&quot; the robot is on the engaged person.' id="8">
                                                    <Choice value="Unengaged" />
                                                    <Choice value="FullyEngaged" />
                                                    <Choice value="SemiEngaged" />
                                                </Parameter>
                                                <Parameter name="Tracking Mode" inherits_from_parent="0" content_type="3" value="Head" default_value="Head" custom_choice="0" tooltip="The tracking mode describes how the robot keeps eye contact with an engaged person." id="9">
                                                    <Choice value="Head" />
                                                    <Choice value="BodyRotation" />
                                                    <Choice value="WholeBody" />
                                                </Parameter>
                                                <Parameter name="Sound Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="10" />
                                                <Parameter name="Movement Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="11" />
                                                <Parameter name="People Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="12" />
                                                <Parameter name="Touch Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="13" />
                                            </Box>
                                            <Box name="Stand Up" id="9" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="146" y="356">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="4" />
                                            <Link inputowner="7" indexofinput="3" outputowner="5" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="3" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Log" id="7" localization="8" tooltip="Prompt the message in the debug window. You can set a prefix and a priority&#x0A;for the message in the parameters." x="218" y="219">
                            <bitmap>media/images/box/print.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_message(self, p):
        sPriority = self.getParameter("Priority")
        sMessage = self.getParameter("Message prefix")
        if( sMessage != "" and p != None ):
            sMessage += ": "
        if( p != None ):
            sMessage += str(p)
        if( sPriority == "Fatal" ):
            self.logger.fatal( sMessage )
        elif( sPriority == "Error" ):
            self.logger.error( sMessage )
        elif( sPriority == "Warning" ):
            self.logger.warning( sMessage )
        elif( sPriority == "Info" ):
            self.logger.info( sMessage )
        elif( sPriority == "Debug" ):
            self.logger.debug( sMessage )
        self.onDone()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="message" type="0" type_size="1" nature="1" inner="0" tooltip='The message to print or a &quot;Bang&quot; to only print the message set as parameter.' id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                            <Parameter name="Message prefix" inherits_from_parent="0" content_type="3" value="Message text" default_value="Message text" custom_choice="0" tooltip="Enter the text you want to print before the input message." id="4" />
                            <Parameter name="Priority" inherits_from_parent="0" content_type="3" value="Info" default_value="Info" custom_choice="0" tooltip="Enter the priority of your message. If you select error, the box will get red when it will be stimulated." id="5">
                                <Choice value="Fatal" />
                                <Choice value="Error" />
                                <Choice value="Warning" />
                                <Choice value="Info" />
                                <Choice value="Debug" />
                            </Parameter>
                            <Parameter name="Parameter" inherits_from_parent="0" content_type="1" value="1" default_value="30" min="0" max="100" tooltip="" id="6" />
                            <Parameter name="Parameter1" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="0" max="100" tooltip="" id="7" />
                        </Box>
                        <Box name="sayPepper" id="2" localization="8" tooltip="こちらに概要を記入" x="484" y="36">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="Animated Say_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                            <Input name="TouchTablet/ToPepper" type="0" type_size="1" nature="4" stm_value_name="TouchTablet/ToPepper" inner="1" tooltip="TouchTablet/ToPepper desc" id="3" />
                            <Output name="result" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram scale="70.7107">
                                            <Box name="Switch Case" id="23" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="65" y="620">
                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("win")):
			self.output_1(p)
		elif(p == self.typeConversion("lose")):
			self.output_2(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <keywords>
                                                        <keyword>&quot;win&quot;</keyword>
                                                        <keyword>&quot;lose&quot;</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </keywords>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                                                <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="6" />
                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="7" />
                                            </Box>
                                            <Box name="Switch Case (1)" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="51" y="30">
                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("janken")):
			self.output_1(p)
		elif(p == self.typeConversion("pon")):
			self.output_2(p)
		elif(p == self.typeConversion("sho")):
			self.output_4(p)
		elif(p == self.typeConversion("ponaiko")):
			self.output_5(p)
		elif(p == self.typeConversion("shoaiko")):
			self.output_6(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <keywords>
                                                        <keyword>&quot;janken&quot;</keyword>
                                                        <keyword>&quot;pon&quot;</keyword>
                                                        <keyword></keyword>
                                                        <keyword>&quot;sho&quot;</keyword>
                                                        <keyword>&quot;ponaiko&quot;</keyword>
                                                        <keyword>&quot;shoaiko&quot;</keyword>
                                                        <keyword></keyword>
                                                    </keywords>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                                                <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="6" />
                                                <Output name="output_4" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="8" />
                                                <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="9" />
                                                <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="10" />
                                            </Box>
                                            <Box name="janken" id="8" localization="8" tooltip="" x="421" y="6">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="500" size="500">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="84.0896">
                                                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="171" y="6">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="150" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " مرحبا ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " じゃん ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : " 你好 "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <german>
                                                                                                <![CDATA[Hallo]]>
</german>
                                                                                            <greek>
                                                                                                <![CDATA[]]>
</greek>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[じゃん]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <norwegian>
                                                                                                <![CDATA[]]>
</norwegian>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <language>10</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Comment" id="2" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="224" y="166">
                                                                    <bitmap>media/images/box/box-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("25フレーム１/秒")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>
                                                                            <![CDATA[25フレーム１/秒]]>
</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="keyframe60" index="60">
                                                            <Diagram>
                                                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="160" y="13">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="150" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " مرحبا ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " ケン！ ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : " 你好 "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <german>
                                                                                                <![CDATA[Hallo]]>
</german>
                                                                                            <greek>
                                                                                                <![CDATA[]]>
</greek>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[ケン！]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <norwegian>
                                                                                                <![CDATA[]]>
</norwegian>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <language>10</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                            <Key frame="25" value="36.5" />
                                                            <Key frame="50" value="36.2109" />
                                                            <Key frame="60" value="-40.5" />
                                                            <Key frame="70" value="-40.5" />
                                                            <Key frame="80" value="-40.5" />
                                                            <Key frame="100" value="-40.5" />
                                                            <Key frame="120" value="-40.5" />
                                                            <Key frame="140" value="-40.5" />
                                                            <Key frame="180" value="-40.5" />
                                                            <Key frame="220" value="-40.5" />
                                                            <Key frame="260" value="-40.5" />
                                                            <Key frame="300" value="-40.5" />
                                                            <Key frame="340" value="-40.5" />
                                                            <Key frame="400" value="-40.5" />
                                                            <Key frame="450" value="-40.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                                            <Key frame="25" value="-0.878909" />
                                                            <Key frame="50" value="-0.878909" />
                                                            <Key frame="60" value="-1.23047" />
                                                            <Key frame="70" value="-1.23047" />
                                                            <Key frame="80" value="-1.23047" />
                                                            <Key frame="100" value="-1.23047" />
                                                            <Key frame="120" value="-1.23047" />
                                                            <Key frame="140" value="-1.23047" />
                                                            <Key frame="180" value="-1.23047" />
                                                            <Key frame="220" value="-1.23047" />
                                                            <Key frame="260" value="-1.23047" />
                                                            <Key frame="300" value="-1.23047" />
                                                            <Key frame="340" value="-1.23047" />
                                                            <Key frame="400" value="-1.23047" />
                                                            <Key frame="450" value="-1.23047" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                                                            <Key frame="25" value="-2.10938" />
                                                            <Key frame="70" value="-43.8574" />
                                                            <Key frame="80" value="-43.8574" />
                                                            <Key frame="100" value="-43.8574" />
                                                            <Key frame="120" value="-43.8574" />
                                                            <Key frame="140" value="-43.8574" />
                                                            <Key frame="180" value="-43.8574" />
                                                            <Key frame="220" value="-43.8574" />
                                                            <Key frame="260" value="-43.8574" />
                                                            <Key frame="300" value="-43.8574" />
                                                            <Key frame="340" value="-43.8574" />
                                                            <Key frame="400" value="-43.8574" />
                                                            <Key frame="450" value="-43.8574" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                                                            <Key frame="25" value="-0.351564" />
                                                            <Key frame="70" value="-0.263673" />
                                                            <Key frame="80" value="-0.263673" />
                                                            <Key frame="100" value="-0.263673" />
                                                            <Key frame="120" value="-0.263673" />
                                                            <Key frame="140" value="-0.263673" />
                                                            <Key frame="180" value="-0.263673" />
                                                            <Key frame="220" value="-0.263673" />
                                                            <Key frame="260" value="-0.263673" />
                                                            <Key frame="300" value="-0.263673" />
                                                            <Key frame="340" value="-0.263673" />
                                                            <Key frame="400" value="-0.263673" />
                                                            <Key frame="450" value="-0.263673" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                                                            <Key frame="25" value="-0.527345" />
                                                            <Key frame="70" value="16.084" />
                                                            <Key frame="80" value="16.084" />
                                                            <Key frame="100" value="16.084" />
                                                            <Key frame="120" value="16.084" />
                                                            <Key frame="140" value="16.084" />
                                                            <Key frame="180" value="16.084" />
                                                            <Key frame="220" value="16.084" />
                                                            <Key frame="260" value="16.084" />
                                                            <Key frame="300" value="16.084" />
                                                            <Key frame="340" value="16.084" />
                                                            <Key frame="400" value="16.084" />
                                                            <Key frame="450" value="16.084" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="25" value="-64.9512" />
                                                            <Key frame="50" value="-64.8633" />
                                                            <Key frame="60" value="-65.0391" />
                                                            <Key frame="70" value="-65.0391" />
                                                            <Key frame="80" value="-65.0391" />
                                                            <Key frame="100" value="-65.0391" />
                                                            <Key frame="120" value="-65.0391" />
                                                            <Key frame="140" value="-65.0391" />
                                                            <Key frame="180" value="-65.0391" />
                                                            <Key frame="220" value="-65.0391" />
                                                            <Key frame="260" value="-65.0391" />
                                                            <Key frame="300" value="-65.0391" />
                                                            <Key frame="340" value="-65.0391" />
                                                            <Key frame="400" value="-65.0391" />
                                                            <Key frame="450" value="-65.0391" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="25" value="-66.5332" />
                                                            <Key frame="50" value="-66.7969" />
                                                            <Key frame="60" value="-66.7969" />
                                                            <Key frame="70" value="-66.7969" />
                                                            <Key frame="80" value="-66.7969" />
                                                            <Key frame="100" value="-66.7969" />
                                                            <Key frame="120" value="-66.7969" />
                                                            <Key frame="140" value="-66.7969" />
                                                            <Key frame="180" value="-66.7969" />
                                                            <Key frame="220" value="-66.7969" />
                                                            <Key frame="260" value="-66.7969" />
                                                            <Key frame="300" value="-66.7969" />
                                                            <Key frame="340" value="-66.7969" />
                                                            <Key frame="400" value="-66.7969" />
                                                            <Key frame="450" value="-66.7969" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="25" value="0.526357" />
                                                            <Key frame="50" value="0.468366" />
                                                            <Key frame="60" value="0.5" />
                                                            <Key frame="70" value="0.5" />
                                                            <Key frame="80" value="0.5" />
                                                            <Key frame="100" value="0.5" />
                                                            <Key frame="120" value="0.5" />
                                                            <Key frame="140" value="0.5" />
                                                            <Key frame="180" value="0.5" />
                                                            <Key frame="220" value="0.5" />
                                                            <Key frame="260" value="0.5" />
                                                            <Key frame="300" value="0.5" />
                                                            <Key frame="340" value="0.5" />
                                                            <Key frame="400" value="0.5" />
                                                            <Key frame="450" value="0.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="25" value="51.7676" />
                                                            <Key frame="50" value="52.0312" />
                                                            <Key frame="60" value="52.3828" />
                                                            <Key frame="70" value="52.3828" />
                                                            <Key frame="80" value="52.3828" />
                                                            <Key frame="100" value="52.3828" />
                                                            <Key frame="120" value="52.3828" />
                                                            <Key frame="140" value="52.3828" />
                                                            <Key frame="180" value="52.3828" />
                                                            <Key frame="220" value="52.3828" />
                                                            <Key frame="260" value="52.3828" />
                                                            <Key frame="300" value="52.3828" />
                                                            <Key frame="340" value="52.3828" />
                                                            <Key frame="400" value="52.3828" />
                                                            <Key frame="450" value="52.3828" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="25" value="0.527345" />
                                                            <Key frame="50" value="0.527345" />
                                                            <Key frame="60" value="0.527345" />
                                                            <Key frame="70" value="0.527345" />
                                                            <Key frame="80" value="0.527345" />
                                                            <Key frame="100" value="0.527345" />
                                                            <Key frame="120" value="0.527345" />
                                                            <Key frame="140" value="0.527345" />
                                                            <Key frame="180" value="0.527345" />
                                                            <Key frame="220" value="0.527345" />
                                                            <Key frame="260" value="0.527345" />
                                                            <Key frame="300" value="0.527345" />
                                                            <Key frame="340" value="0.527345" />
                                                            <Key frame="400" value="0.527345" />
                                                            <Key frame="450" value="0.527345" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="25" value="-50.1007" />
                                                            <Key frame="50" value="-49.6612" />
                                                            <Key frame="60" value="-49.5733" />
                                                            <Key frame="70" value="-49.5733" />
                                                            <Key frame="80" value="-49.5733" />
                                                            <Key frame="100" value="-49.5733" />
                                                            <Key frame="120" value="-49.5733" />
                                                            <Key frame="140" value="-49.5733" />
                                                            <Key frame="180" value="-49.5733" />
                                                            <Key frame="220" value="-49.5733" />
                                                            <Key frame="260" value="-49.5733" />
                                                            <Key frame="300" value="-49.5733" />
                                                            <Key frame="340" value="-49.5733" />
                                                            <Key frame="400" value="-49.5733" />
                                                            <Key frame="450" value="-49.5733" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="25" value="60.2051" />
                                                            <Key frame="50" value="60.5566" />
                                                            <Key frame="60" value="60.3809" />
                                                            <Key frame="70" value="60.3809" />
                                                            <Key frame="80" value="60.3809" />
                                                            <Key frame="100" value="60.3809" />
                                                            <Key frame="120" value="60.3809" />
                                                            <Key frame="140" value="60.3809" />
                                                            <Key frame="180" value="60.3809" />
                                                            <Key frame="220" value="60.3809" />
                                                            <Key frame="260" value="60.3809" />
                                                            <Key frame="300" value="60.3809" />
                                                            <Key frame="340" value="60.3809" />
                                                            <Key frame="400" value="60.3809" />
                                                            <Key frame="450" value="60.3809" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="25" value="61.9629" />
                                                            <Key frame="50" value="61.7871" />
                                                            <Key frame="60" value="61.9629" />
                                                            <Key frame="70" value="61.9629" />
                                                            <Key frame="80" value="61.9629" />
                                                            <Key frame="100" value="61.9629" />
                                                            <Key frame="120" value="61.9629" />
                                                            <Key frame="140" value="61.9629" />
                                                            <Key frame="180" value="61.9629" />
                                                            <Key frame="220" value="61.9629" />
                                                            <Key frame="260" value="61.9629" />
                                                            <Key frame="300" value="61.9629" />
                                                            <Key frame="340" value="61.9629" />
                                                            <Key frame="400" value="61.9629" />
                                                            <Key frame="450" value="61.9629" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="50" value="0.467487" />
                                                            <Key frame="60" value="0.5" />
                                                            <Key frame="70" value="0.5" />
                                                            <Key frame="80" value="0.5" />
                                                            <Key frame="100" value="0.5" />
                                                            <Key frame="120" value="0.453598" />
                                                            <Key frame="140" value="0.453598" />
                                                            <Key frame="180" value="0.453598" />
                                                            <Key frame="220" value="0.5" />
                                                            <Key frame="260" value="0.5" />
                                                            <Key frame="300" value="0.5" />
                                                            <Key frame="340" value="0.5" />
                                                            <Key frame="400" value="0.5" />
                                                            <Key frame="450" value="0.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="25" value="44.5606" />
                                                            <Key frame="50" value="44.8242" />
                                                            <Key frame="60" value="44.8242" />
                                                            <Key frame="70" value="44.8242" />
                                                            <Key frame="80" value="44.8242" />
                                                            <Key frame="100" value="44.8242" />
                                                            <Key frame="120" value="44.8242" />
                                                            <Key frame="140" value="44.8242" />
                                                            <Key frame="180" value="44.8242" />
                                                            <Key frame="220" value="44.8242" />
                                                            <Key frame="260" value="44.8242" />
                                                            <Key frame="300" value="44.8242" />
                                                            <Key frame="340" value="44.8242" />
                                                            <Key frame="400" value="44.8242" />
                                                            <Key frame="450" value="44.8242" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="25" value="-2.98828" />
                                                            <Key frame="50" value="-3.42773" />
                                                            <Key frame="60" value="-3.42773" />
                                                            <Key frame="70" value="-3.42773" />
                                                            <Key frame="80" value="-3.42773" />
                                                            <Key frame="100" value="-3.42773" />
                                                            <Key frame="120" value="-3.42773" />
                                                            <Key frame="140" value="-3.42773" />
                                                            <Key frame="180" value="-3.42773" />
                                                            <Key frame="220" value="-3.42773" />
                                                            <Key frame="260" value="-3.42773" />
                                                            <Key frame="300" value="-3.42773" />
                                                            <Key frame="340" value="-3.42773" />
                                                            <Key frame="400" value="-3.42773" />
                                                            <Key frame="450" value="-3.42773" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="25" value="48.9533" />
                                                            <Key frame="50" value="48.1623" />
                                                            <Key frame="60" value="47.547" />
                                                            <Key frame="70" value="47.547" />
                                                            <Key frame="80" value="47.547" />
                                                            <Key frame="100" value="47.547" />
                                                            <Key frame="120" value="47.547" />
                                                            <Key frame="140" value="47.547" />
                                                            <Key frame="180" value="47.547" />
                                                            <Key frame="220" value="47.547" />
                                                            <Key frame="260" value="47.547" />
                                                            <Key frame="300" value="47.547" />
                                                            <Key frame="340" value="47.547" />
                                                            <Key frame="400" value="47.547" />
                                                            <Key frame="450" value="47.547" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="pon" id="10" localization="8" tooltip="" x="510" y="87">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="37" size="37">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="84.0896">
                                                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="171" y="6">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="150" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " مرحبا ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " ぽん！ ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : " 你好 "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <german>
                                                                                                <![CDATA[Hallo]]>
</german>
                                                                                            <greek>
                                                                                                <![CDATA[]]>
</greek>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[ぽん！]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <norwegian>
                                                                                                <![CDATA[]]>
</norwegian>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <language>10</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Comment" id="2" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="224" y="166">
                                                                    <bitmap>media/images/box/box-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("25フレーム１/秒")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>
                                                                            <![CDATA[25フレーム１/秒]]>
</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                            <Key frame="10" value="-1.4" />
                                                            <Key frame="15" value="-1.4" />
                                                            <Key frame="30" value="-1.4" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                                            <Key frame="10" value="-1.23047" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                                                            <Key frame="10" value="-16.9969" />
                                                            <Key frame="15" value="-16.7" />
                                                            <Key frame="30" value="-0.711887" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                                                            <Key frame="10" value="-0.263673" />
                                                            <Key frame="15" value="0" />
                                                            <Key frame="30" value="0" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                                                            <Key frame="10" value="-2.9" />
                                                            <Key frame="15" value="-2.9" />
                                                            <Key frame="30" value="-2.9" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="10" value="-65.0391" />
                                                            <Key frame="15" value="-65.0391" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="10" value="-66.7969" />
                                                            <Key frame="15" value="-66.7969" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="10" value="0.5" />
                                                            <Key frame="15" value="0.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="10" value="52.3828" />
                                                            <Key frame="15" value="52.3023" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="10" value="0.527345" />
                                                            <Key frame="15" value="0.527345" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="10" value="-49.5733" />
                                                            <Key frame="15" value="-49.5733" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="10" value="60.3809" />
                                                            <Key frame="15" value="60.3809" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="10" value="61.9629" />
                                                            <Key frame="15" value="61.9629" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="10" value="0.5" />
                                                            <Key frame="15" value="0.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="10" value="44.8242" />
                                                            <Key frame="15" value="44.8519" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="10" value="-3.42773" />
                                                            <Key frame="15" value="-3.42773" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="10" value="47.547" />
                                                            <Key frame="15" value="47.547" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="timeout" id="14" localization="8" tooltip="こちらに概要を記入" x="695" y="752">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="Wait_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                                                <Input name="stop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                <Input name="reset" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Output name="Say_onStopped" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="5" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Wait _20s" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="173" y="15">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                                    <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="20" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                                    <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                                                </Box>
                                                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="356" y="19">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="130" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " مرحبا ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " ごめんなさい。時間切れです。終了します。 ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : " 你好 "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <german>
                                                                                                <![CDATA[Hallo]]>
</german>
                                                                                            <greek>
                                                                                                <![CDATA[]]>
</greek>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[ごめんなさい。時間切れです。終了します。]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <norwegian>
                                                                                                <![CDATA[]]>
</norwegian>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <language>10</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Show Image" id="13" localization="8" tooltip="display an image on the screen&#x0A;&#x0A;V1.0.0&#x0A;" x="358" y="208">
                                                                    <bitmap>media/images/box/interaction/rec_movie.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[

class MyClass(GeneratedClass):

    def onLoad(self):
        self.frameManager = None
        try:
            self.frameManager = ALProxy("ALFrameManager")
        except Exception as e:
            self.logger.error(e)

    def onUnload(self):
        pass

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAbsoluteUrl(self, partial_url):
        import os
        subPath = os.path.join(self.packageUid(), os.path.normpath(partial_url).lstrip("\\/"))
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        return "http://%s/apps/%s" %(self._getTabletService().robotIp(), subPath.replace(os.path.sep, "/"))

    def onInput_onStart(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                url = self.getParameter("ImageUrl")
                if url == '':
                    self.logger.error("URL of the image is empty")
                if not url.startswith('http'):
                    url = self._getAbsoluteUrl(url)
                tabletService.showImage(url)
            except Exception as err:
                self.logger.error("Error during ShowImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't display the image.")
            self.onStopped()

    def onInput_onHideImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                tabletService.hideImage()
            except Exception as err:
                self.logger.error("Error during HideImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't hide the image.")
            self.onStopped()

    def onInput_onPreLoadImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                partialUrl = self.getParameter("ImageUrl")
                fullUrl = self._getAbsoluteUrl(partialUrl)
                tabletService.preLoadImage(fullUrl)
            except Exception as err:
                self.logger.warning("Error during preLoadImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't preload the image.")
            self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="onHideImage" type="1" type_size="1" nature="1" inner="0" tooltip="Hide the image when a signal is received on this input." id="4" />
                                                                    <Input name="onPreLoadImage" type="1" type_size="1" nature="1" inner="0" tooltip="Preload the image when a signal is received on this input." id="5" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" />
                                                                    <Parameter name="ImageUrl" inherits_from_parent="0" content_type="3" value="images/bg.jpg" default_value="" custom_choice="0" tooltip='path of the image inside the &quot;html&quot; folder (e.g. &quot;/images/myimage.png&quot;' id="7" />
                                                                </Box>
                                                                <Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="519" y="24">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("3")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>
                                                                            <![CDATA[3]]>
</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                                                </Box>
                                                                <Box name="Wait _1s" id="3" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="127" y="231">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                                    <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                                    <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                <Link inputowner="13" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="3" />
                                                                <Link inputowner="6" indexofinput="3" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="ponaiko" id="7" localization="8" tooltip="" x="714" y="294">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="500" size="500">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="84.0896">
                                                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="171" y="6">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="150" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " مرحبا ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " ぽん！\\pau=500\\あーいこぉで ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : " 你好 "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <german>
                                                                                                <![CDATA[Hallo]]>
</german>
                                                                                            <greek>
                                                                                                <![CDATA[]]>
</greek>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[ぽん！\pau=500\あーいこぉで]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <norwegian>
                                                                                                <![CDATA[]]>
</norwegian>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <language>10</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Comment" id="2" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="224" y="166">
                                                                    <bitmap>media/images/box/box-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("25フレーム１/秒")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>
                                                                            <![CDATA[25フレーム１/秒]]>
</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                            <Key frame="25" value="36.5" />
                                                            <Key frame="50" value="36.2109" />
                                                            <Key frame="60" value="-40.5" />
                                                            <Key frame="70" value="-40.5" />
                                                            <Key frame="80" value="-40.5" />
                                                            <Key frame="100" value="-40.5" />
                                                            <Key frame="120" value="-40.5" />
                                                            <Key frame="140" value="-40.5" />
                                                            <Key frame="180" value="-40.5" />
                                                            <Key frame="220" value="-40.5" />
                                                            <Key frame="260" value="-40.5" />
                                                            <Key frame="300" value="-40.5" />
                                                            <Key frame="340" value="-40.5" />
                                                            <Key frame="400" value="-40.5" />
                                                            <Key frame="450" value="-40.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                                            <Key frame="25" value="-0.878909" />
                                                            <Key frame="50" value="-0.878909" />
                                                            <Key frame="60" value="-1.23047" />
                                                            <Key frame="70" value="-1.23047" />
                                                            <Key frame="80" value="-1.23047" />
                                                            <Key frame="100" value="-1.23047" />
                                                            <Key frame="120" value="-1.23047" />
                                                            <Key frame="140" value="-1.23047" />
                                                            <Key frame="180" value="-1.23047" />
                                                            <Key frame="220" value="-1.23047" />
                                                            <Key frame="260" value="-1.23047" />
                                                            <Key frame="300" value="-1.23047" />
                                                            <Key frame="340" value="-1.23047" />
                                                            <Key frame="400" value="-1.23047" />
                                                            <Key frame="450" value="-1.23047" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                                                            <Key frame="25" value="-2.10938" />
                                                            <Key frame="70" value="-43.8574" />
                                                            <Key frame="80" value="-43.8574" />
                                                            <Key frame="100" value="-43.8574" />
                                                            <Key frame="120" value="-43.8574" />
                                                            <Key frame="140" value="-43.8574" />
                                                            <Key frame="180" value="-43.8574" />
                                                            <Key frame="220" value="-43.8574" />
                                                            <Key frame="260" value="-43.8574" />
                                                            <Key frame="300" value="-43.8574" />
                                                            <Key frame="340" value="-43.8574" />
                                                            <Key frame="400" value="-43.8574" />
                                                            <Key frame="450" value="-43.8574" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                                                            <Key frame="25" value="-0.351564" />
                                                            <Key frame="70" value="-0.263673" />
                                                            <Key frame="80" value="-0.263673" />
                                                            <Key frame="100" value="-0.263673" />
                                                            <Key frame="120" value="-0.263673" />
                                                            <Key frame="140" value="-0.263673" />
                                                            <Key frame="180" value="-0.263673" />
                                                            <Key frame="220" value="-0.263673" />
                                                            <Key frame="260" value="-0.263673" />
                                                            <Key frame="300" value="-0.263673" />
                                                            <Key frame="340" value="-0.263673" />
                                                            <Key frame="400" value="-0.263673" />
                                                            <Key frame="450" value="-0.263673" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                                                            <Key frame="25" value="-0.527345" />
                                                            <Key frame="70" value="16.084" />
                                                            <Key frame="80" value="16.084" />
                                                            <Key frame="100" value="16.084" />
                                                            <Key frame="120" value="16.084" />
                                                            <Key frame="140" value="16.084" />
                                                            <Key frame="180" value="16.084" />
                                                            <Key frame="220" value="16.084" />
                                                            <Key frame="260" value="16.084" />
                                                            <Key frame="300" value="16.084" />
                                                            <Key frame="340" value="16.084" />
                                                            <Key frame="400" value="16.084" />
                                                            <Key frame="450" value="16.084" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="25" value="-64.9512" />
                                                            <Key frame="50" value="-64.8633" />
                                                            <Key frame="60" value="-65.0391" />
                                                            <Key frame="70" value="-65.0391" />
                                                            <Key frame="80" value="-65.0391" />
                                                            <Key frame="100" value="-65.0391" />
                                                            <Key frame="120" value="-65.0391" />
                                                            <Key frame="140" value="-65.0391" />
                                                            <Key frame="180" value="-65.0391" />
                                                            <Key frame="220" value="-65.0391" />
                                                            <Key frame="260" value="-65.0391" />
                                                            <Key frame="300" value="-65.0391" />
                                                            <Key frame="340" value="-65.0391" />
                                                            <Key frame="400" value="-65.0391" />
                                                            <Key frame="450" value="-65.0391" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="25" value="-66.5332" />
                                                            <Key frame="50" value="-66.7969" />
                                                            <Key frame="60" value="-66.7969" />
                                                            <Key frame="70" value="-66.7969" />
                                                            <Key frame="80" value="-66.7969" />
                                                            <Key frame="100" value="-66.7969" />
                                                            <Key frame="120" value="-66.7969" />
                                                            <Key frame="140" value="-66.7969" />
                                                            <Key frame="180" value="-66.7969" />
                                                            <Key frame="220" value="-66.7969" />
                                                            <Key frame="260" value="-66.7969" />
                                                            <Key frame="300" value="-66.7969" />
                                                            <Key frame="340" value="-66.7969" />
                                                            <Key frame="400" value="-66.7969" />
                                                            <Key frame="450" value="-66.7969" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="25" value="0.526357" />
                                                            <Key frame="50" value="0.468366" />
                                                            <Key frame="60" value="0.5" />
                                                            <Key frame="70" value="0.5" />
                                                            <Key frame="80" value="0.5" />
                                                            <Key frame="100" value="0.5" />
                                                            <Key frame="120" value="0.5" />
                                                            <Key frame="140" value="0.5" />
                                                            <Key frame="180" value="0.5" />
                                                            <Key frame="220" value="0.5" />
                                                            <Key frame="260" value="0.5" />
                                                            <Key frame="300" value="0.5" />
                                                            <Key frame="340" value="0.5" />
                                                            <Key frame="400" value="0.5" />
                                                            <Key frame="450" value="0.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="25" value="51.7676" />
                                                            <Key frame="50" value="52.0312" />
                                                            <Key frame="60" value="52.3828" />
                                                            <Key frame="70" value="52.3828" />
                                                            <Key frame="80" value="52.3828" />
                                                            <Key frame="100" value="52.3828" />
                                                            <Key frame="120" value="52.3828" />
                                                            <Key frame="140" value="52.3828" />
                                                            <Key frame="180" value="52.3828" />
                                                            <Key frame="220" value="52.3828" />
                                                            <Key frame="260" value="52.3828" />
                                                            <Key frame="300" value="52.3828" />
                                                            <Key frame="340" value="52.3828" />
                                                            <Key frame="400" value="52.3828" />
                                                            <Key frame="450" value="52.3828" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="25" value="0.527345" />
                                                            <Key frame="50" value="0.527345" />
                                                            <Key frame="60" value="0.527345" />
                                                            <Key frame="70" value="0.527345" />
                                                            <Key frame="80" value="0.527345" />
                                                            <Key frame="100" value="0.527345" />
                                                            <Key frame="120" value="0.527345" />
                                                            <Key frame="140" value="0.527345" />
                                                            <Key frame="180" value="0.527345" />
                                                            <Key frame="220" value="0.527345" />
                                                            <Key frame="260" value="0.527345" />
                                                            <Key frame="300" value="0.527345" />
                                                            <Key frame="340" value="0.527345" />
                                                            <Key frame="400" value="0.527345" />
                                                            <Key frame="450" value="0.527345" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="25" value="-50.1007" />
                                                            <Key frame="50" value="-49.6612" />
                                                            <Key frame="60" value="-49.5733" />
                                                            <Key frame="70" value="-49.5733" />
                                                            <Key frame="80" value="-49.5733" />
                                                            <Key frame="100" value="-49.5733" />
                                                            <Key frame="120" value="-49.5733" />
                                                            <Key frame="140" value="-49.5733" />
                                                            <Key frame="180" value="-49.5733" />
                                                            <Key frame="220" value="-49.5733" />
                                                            <Key frame="260" value="-49.5733" />
                                                            <Key frame="300" value="-49.5733" />
                                                            <Key frame="340" value="-49.5733" />
                                                            <Key frame="400" value="-49.5733" />
                                                            <Key frame="450" value="-49.5733" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="25" value="60.2051" />
                                                            <Key frame="50" value="60.5566" />
                                                            <Key frame="60" value="60.3809" />
                                                            <Key frame="70" value="60.3809" />
                                                            <Key frame="80" value="60.3809" />
                                                            <Key frame="100" value="60.3809" />
                                                            <Key frame="120" value="60.3809" />
                                                            <Key frame="140" value="60.3809" />
                                                            <Key frame="180" value="60.3809" />
                                                            <Key frame="220" value="60.3809" />
                                                            <Key frame="260" value="60.3809" />
                                                            <Key frame="300" value="60.3809" />
                                                            <Key frame="340" value="60.3809" />
                                                            <Key frame="400" value="60.3809" />
                                                            <Key frame="450" value="60.3809" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="25" value="61.9629" />
                                                            <Key frame="50" value="61.7871" />
                                                            <Key frame="60" value="61.9629" />
                                                            <Key frame="70" value="61.9629" />
                                                            <Key frame="80" value="61.9629" />
                                                            <Key frame="100" value="61.9629" />
                                                            <Key frame="120" value="61.9629" />
                                                            <Key frame="140" value="61.9629" />
                                                            <Key frame="180" value="61.9629" />
                                                            <Key frame="220" value="61.9629" />
                                                            <Key frame="260" value="61.9629" />
                                                            <Key frame="300" value="61.9629" />
                                                            <Key frame="340" value="61.9629" />
                                                            <Key frame="400" value="61.9629" />
                                                            <Key frame="450" value="61.9629" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="50" value="0.467487" />
                                                            <Key frame="60" value="0.5" />
                                                            <Key frame="70" value="0.5" />
                                                            <Key frame="80" value="0.5" />
                                                            <Key frame="100" value="0.5" />
                                                            <Key frame="120" value="0.453598" />
                                                            <Key frame="140" value="0.453598" />
                                                            <Key frame="180" value="0.453598" />
                                                            <Key frame="220" value="0.5" />
                                                            <Key frame="260" value="0.5" />
                                                            <Key frame="300" value="0.5" />
                                                            <Key frame="340" value="0.5" />
                                                            <Key frame="400" value="0.5" />
                                                            <Key frame="450" value="0.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="25" value="44.5606" />
                                                            <Key frame="50" value="44.8242" />
                                                            <Key frame="60" value="44.8242" />
                                                            <Key frame="70" value="44.8242" />
                                                            <Key frame="80" value="44.8242" />
                                                            <Key frame="100" value="44.8242" />
                                                            <Key frame="120" value="44.8242" />
                                                            <Key frame="140" value="44.8242" />
                                                            <Key frame="180" value="44.8242" />
                                                            <Key frame="220" value="44.8242" />
                                                            <Key frame="260" value="44.8242" />
                                                            <Key frame="300" value="44.8242" />
                                                            <Key frame="340" value="44.8242" />
                                                            <Key frame="400" value="44.8242" />
                                                            <Key frame="450" value="44.8242" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="25" value="-2.98828" />
                                                            <Key frame="50" value="-3.42773" />
                                                            <Key frame="60" value="-3.42773" />
                                                            <Key frame="70" value="-3.42773" />
                                                            <Key frame="80" value="-3.42773" />
                                                            <Key frame="100" value="-3.42773" />
                                                            <Key frame="120" value="-3.42773" />
                                                            <Key frame="140" value="-3.42773" />
                                                            <Key frame="180" value="-3.42773" />
                                                            <Key frame="220" value="-3.42773" />
                                                            <Key frame="260" value="-3.42773" />
                                                            <Key frame="300" value="-3.42773" />
                                                            <Key frame="340" value="-3.42773" />
                                                            <Key frame="400" value="-3.42773" />
                                                            <Key frame="450" value="-3.42773" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="25" value="48.9533" />
                                                            <Key frame="50" value="48.1623" />
                                                            <Key frame="60" value="47.547" />
                                                            <Key frame="70" value="47.547" />
                                                            <Key frame="80" value="47.547" />
                                                            <Key frame="100" value="47.547" />
                                                            <Key frame="120" value="47.547" />
                                                            <Key frame="140" value="47.547" />
                                                            <Key frame="180" value="47.547" />
                                                            <Key frame="220" value="47.547" />
                                                            <Key frame="260" value="47.547" />
                                                            <Key frame="300" value="47.547" />
                                                            <Key frame="340" value="47.547" />
                                                            <Key frame="400" value="47.547" />
                                                            <Key frame="450" value="47.547" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="shoaiko" id="16" localization="8" tooltip="" x="967" y="390">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="500" size="500">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="84.0896">
                                                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="171" y="6">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="150" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " مرحبا ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " 師ょ！\\pau=500\\あーいこぉで ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : " 你好 "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <german>
                                                                                                <![CDATA[Hallo]]>
</german>
                                                                                            <greek>
                                                                                                <![CDATA[]]>
</greek>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[師ょ！\pau=500\あーいこぉで]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <norwegian>
                                                                                                <![CDATA[]]>
</norwegian>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <language>10</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Comment" id="2" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="224" y="166">
                                                                    <bitmap>media/images/box/box-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("25フレーム１/秒")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>
                                                                            <![CDATA[25フレーム１/秒]]>
</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                            <Key frame="25" value="36.5" />
                                                            <Key frame="50" value="36.2109" />
                                                            <Key frame="60" value="-40.5" />
                                                            <Key frame="70" value="-40.5" />
                                                            <Key frame="80" value="-40.5" />
                                                            <Key frame="100" value="-40.5" />
                                                            <Key frame="120" value="-40.5" />
                                                            <Key frame="140" value="-40.5" />
                                                            <Key frame="180" value="-40.5" />
                                                            <Key frame="220" value="-40.5" />
                                                            <Key frame="260" value="-40.5" />
                                                            <Key frame="300" value="-40.5" />
                                                            <Key frame="340" value="-40.5" />
                                                            <Key frame="400" value="-40.5" />
                                                            <Key frame="450" value="-40.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                                            <Key frame="25" value="-0.878909" />
                                                            <Key frame="50" value="-0.878909" />
                                                            <Key frame="60" value="-1.23047" />
                                                            <Key frame="70" value="-1.23047" />
                                                            <Key frame="80" value="-1.23047" />
                                                            <Key frame="100" value="-1.23047" />
                                                            <Key frame="120" value="-1.23047" />
                                                            <Key frame="140" value="-1.23047" />
                                                            <Key frame="180" value="-1.23047" />
                                                            <Key frame="220" value="-1.23047" />
                                                            <Key frame="260" value="-1.23047" />
                                                            <Key frame="300" value="-1.23047" />
                                                            <Key frame="340" value="-1.23047" />
                                                            <Key frame="400" value="-1.23047" />
                                                            <Key frame="450" value="-1.23047" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                                                            <Key frame="25" value="-2.10938" />
                                                            <Key frame="70" value="-43.8574" />
                                                            <Key frame="80" value="-43.8574" />
                                                            <Key frame="100" value="-43.8574" />
                                                            <Key frame="120" value="-43.8574" />
                                                            <Key frame="140" value="-43.8574" />
                                                            <Key frame="180" value="-43.8574" />
                                                            <Key frame="220" value="-43.8574" />
                                                            <Key frame="260" value="-43.8574" />
                                                            <Key frame="300" value="-43.8574" />
                                                            <Key frame="340" value="-43.8574" />
                                                            <Key frame="400" value="-43.8574" />
                                                            <Key frame="450" value="-43.8574" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                                                            <Key frame="25" value="-0.351564" />
                                                            <Key frame="70" value="-0.263673" />
                                                            <Key frame="80" value="-0.263673" />
                                                            <Key frame="100" value="-0.263673" />
                                                            <Key frame="120" value="-0.263673" />
                                                            <Key frame="140" value="-0.263673" />
                                                            <Key frame="180" value="-0.263673" />
                                                            <Key frame="220" value="-0.263673" />
                                                            <Key frame="260" value="-0.263673" />
                                                            <Key frame="300" value="-0.263673" />
                                                            <Key frame="340" value="-0.263673" />
                                                            <Key frame="400" value="-0.263673" />
                                                            <Key frame="450" value="-0.263673" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                                                            <Key frame="25" value="-0.527345" />
                                                            <Key frame="70" value="16.084" />
                                                            <Key frame="80" value="16.084" />
                                                            <Key frame="100" value="16.084" />
                                                            <Key frame="120" value="16.084" />
                                                            <Key frame="140" value="16.084" />
                                                            <Key frame="180" value="16.084" />
                                                            <Key frame="220" value="16.084" />
                                                            <Key frame="260" value="16.084" />
                                                            <Key frame="300" value="16.084" />
                                                            <Key frame="340" value="16.084" />
                                                            <Key frame="400" value="16.084" />
                                                            <Key frame="450" value="16.084" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="25" value="-64.9512" />
                                                            <Key frame="50" value="-64.8633" />
                                                            <Key frame="60" value="-65.0391" />
                                                            <Key frame="70" value="-65.0391" />
                                                            <Key frame="80" value="-65.0391" />
                                                            <Key frame="100" value="-65.0391" />
                                                            <Key frame="120" value="-65.0391" />
                                                            <Key frame="140" value="-65.0391" />
                                                            <Key frame="180" value="-65.0391" />
                                                            <Key frame="220" value="-65.0391" />
                                                            <Key frame="260" value="-65.0391" />
                                                            <Key frame="300" value="-65.0391" />
                                                            <Key frame="340" value="-65.0391" />
                                                            <Key frame="400" value="-65.0391" />
                                                            <Key frame="450" value="-65.0391" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="25" value="-66.5332" />
                                                            <Key frame="50" value="-66.7969" />
                                                            <Key frame="60" value="-66.7969" />
                                                            <Key frame="70" value="-66.7969" />
                                                            <Key frame="80" value="-66.7969" />
                                                            <Key frame="100" value="-66.7969" />
                                                            <Key frame="120" value="-66.7969" />
                                                            <Key frame="140" value="-66.7969" />
                                                            <Key frame="180" value="-66.7969" />
                                                            <Key frame="220" value="-66.7969" />
                                                            <Key frame="260" value="-66.7969" />
                                                            <Key frame="300" value="-66.7969" />
                                                            <Key frame="340" value="-66.7969" />
                                                            <Key frame="400" value="-66.7969" />
                                                            <Key frame="450" value="-66.7969" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="25" value="0.526357" />
                                                            <Key frame="50" value="0.468366" />
                                                            <Key frame="60" value="0.5" />
                                                            <Key frame="70" value="0.5" />
                                                            <Key frame="80" value="0.5" />
                                                            <Key frame="100" value="0.5" />
                                                            <Key frame="120" value="0.5" />
                                                            <Key frame="140" value="0.5" />
                                                            <Key frame="180" value="0.5" />
                                                            <Key frame="220" value="0.5" />
                                                            <Key frame="260" value="0.5" />
                                                            <Key frame="300" value="0.5" />
                                                            <Key frame="340" value="0.5" />
                                                            <Key frame="400" value="0.5" />
                                                            <Key frame="450" value="0.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="25" value="51.7676" />
                                                            <Key frame="50" value="52.0312" />
                                                            <Key frame="60" value="52.3828" />
                                                            <Key frame="70" value="52.3828" />
                                                            <Key frame="80" value="52.3828" />
                                                            <Key frame="100" value="52.3828" />
                                                            <Key frame="120" value="52.3828" />
                                                            <Key frame="140" value="52.3828" />
                                                            <Key frame="180" value="52.3828" />
                                                            <Key frame="220" value="52.3828" />
                                                            <Key frame="260" value="52.3828" />
                                                            <Key frame="300" value="52.3828" />
                                                            <Key frame="340" value="52.3828" />
                                                            <Key frame="400" value="52.3828" />
                                                            <Key frame="450" value="52.3828" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="25" value="0.527345" />
                                                            <Key frame="50" value="0.527345" />
                                                            <Key frame="60" value="0.527345" />
                                                            <Key frame="70" value="0.527345" />
                                                            <Key frame="80" value="0.527345" />
                                                            <Key frame="100" value="0.527345" />
                                                            <Key frame="120" value="0.527345" />
                                                            <Key frame="140" value="0.527345" />
                                                            <Key frame="180" value="0.527345" />
                                                            <Key frame="220" value="0.527345" />
                                                            <Key frame="260" value="0.527345" />
                                                            <Key frame="300" value="0.527345" />
                                                            <Key frame="340" value="0.527345" />
                                                            <Key frame="400" value="0.527345" />
                                                            <Key frame="450" value="0.527345" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="25" value="-50.1007" />
                                                            <Key frame="50" value="-49.6612" />
                                                            <Key frame="60" value="-49.5733" />
                                                            <Key frame="70" value="-49.5733" />
                                                            <Key frame="80" value="-49.5733" />
                                                            <Key frame="100" value="-49.5733" />
                                                            <Key frame="120" value="-49.5733" />
                                                            <Key frame="140" value="-49.5733" />
                                                            <Key frame="180" value="-49.5733" />
                                                            <Key frame="220" value="-49.5733" />
                                                            <Key frame="260" value="-49.5733" />
                                                            <Key frame="300" value="-49.5733" />
                                                            <Key frame="340" value="-49.5733" />
                                                            <Key frame="400" value="-49.5733" />
                                                            <Key frame="450" value="-49.5733" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="25" value="60.2051" />
                                                            <Key frame="50" value="60.5566" />
                                                            <Key frame="60" value="60.3809" />
                                                            <Key frame="70" value="60.3809" />
                                                            <Key frame="80" value="60.3809" />
                                                            <Key frame="100" value="60.3809" />
                                                            <Key frame="120" value="60.3809" />
                                                            <Key frame="140" value="60.3809" />
                                                            <Key frame="180" value="60.3809" />
                                                            <Key frame="220" value="60.3809" />
                                                            <Key frame="260" value="60.3809" />
                                                            <Key frame="300" value="60.3809" />
                                                            <Key frame="340" value="60.3809" />
                                                            <Key frame="400" value="60.3809" />
                                                            <Key frame="450" value="60.3809" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="25" value="61.9629" />
                                                            <Key frame="50" value="61.7871" />
                                                            <Key frame="60" value="61.9629" />
                                                            <Key frame="70" value="61.9629" />
                                                            <Key frame="80" value="61.9629" />
                                                            <Key frame="100" value="61.9629" />
                                                            <Key frame="120" value="61.9629" />
                                                            <Key frame="140" value="61.9629" />
                                                            <Key frame="180" value="61.9629" />
                                                            <Key frame="220" value="61.9629" />
                                                            <Key frame="260" value="61.9629" />
                                                            <Key frame="300" value="61.9629" />
                                                            <Key frame="340" value="61.9629" />
                                                            <Key frame="400" value="61.9629" />
                                                            <Key frame="450" value="61.9629" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="50" value="0.467487" />
                                                            <Key frame="60" value="0.5" />
                                                            <Key frame="70" value="0.5" />
                                                            <Key frame="80" value="0.5" />
                                                            <Key frame="100" value="0.5" />
                                                            <Key frame="120" value="0.453598" />
                                                            <Key frame="140" value="0.453598" />
                                                            <Key frame="180" value="0.453598" />
                                                            <Key frame="220" value="0.5" />
                                                            <Key frame="260" value="0.5" />
                                                            <Key frame="300" value="0.5" />
                                                            <Key frame="340" value="0.5" />
                                                            <Key frame="400" value="0.5" />
                                                            <Key frame="450" value="0.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="25" value="44.5606" />
                                                            <Key frame="50" value="44.8242" />
                                                            <Key frame="60" value="44.8242" />
                                                            <Key frame="70" value="44.8242" />
                                                            <Key frame="80" value="44.8242" />
                                                            <Key frame="100" value="44.8242" />
                                                            <Key frame="120" value="44.8242" />
                                                            <Key frame="140" value="44.8242" />
                                                            <Key frame="180" value="44.8242" />
                                                            <Key frame="220" value="44.8242" />
                                                            <Key frame="260" value="44.8242" />
                                                            <Key frame="300" value="44.8242" />
                                                            <Key frame="340" value="44.8242" />
                                                            <Key frame="400" value="44.8242" />
                                                            <Key frame="450" value="44.8242" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="25" value="-2.98828" />
                                                            <Key frame="50" value="-3.42773" />
                                                            <Key frame="60" value="-3.42773" />
                                                            <Key frame="70" value="-3.42773" />
                                                            <Key frame="80" value="-3.42773" />
                                                            <Key frame="100" value="-3.42773" />
                                                            <Key frame="120" value="-3.42773" />
                                                            <Key frame="140" value="-3.42773" />
                                                            <Key frame="180" value="-3.42773" />
                                                            <Key frame="220" value="-3.42773" />
                                                            <Key frame="260" value="-3.42773" />
                                                            <Key frame="300" value="-3.42773" />
                                                            <Key frame="340" value="-3.42773" />
                                                            <Key frame="400" value="-3.42773" />
                                                            <Key frame="450" value="-3.42773" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="25" value="48.9533" />
                                                            <Key frame="50" value="48.1623" />
                                                            <Key frame="60" value="47.547" />
                                                            <Key frame="70" value="47.547" />
                                                            <Key frame="80" value="47.547" />
                                                            <Key frame="100" value="47.547" />
                                                            <Key frame="120" value="47.547" />
                                                            <Key frame="140" value="47.547" />
                                                            <Key frame="180" value="47.547" />
                                                            <Key frame="220" value="47.547" />
                                                            <Key frame="260" value="47.547" />
                                                            <Key frame="300" value="47.547" />
                                                            <Key frame="340" value="47.547" />
                                                            <Key frame="400" value="47.547" />
                                                            <Key frame="450" value="47.547" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Wait (1)" id="17" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="843" y="386">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                            </Box>
                                            <Box name="sho" id="4" localization="8" tooltip="" x="607" y="194">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="37" size="37">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="84.0896">
                                                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="171" y="6">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="150" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " مرحبا ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " 師ょ！ ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : " 你好 "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <german>
                                                                                                <![CDATA[Hallo]]>
</german>
                                                                                            <greek>
                                                                                                <![CDATA[]]>
</greek>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[師ょ！]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <norwegian>
                                                                                                <![CDATA[]]>
</norwegian>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <language>10</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Comment" id="2" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="224" y="166">
                                                                    <bitmap>media/images/box/box-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("25フレーム１/秒")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>
                                                                            <![CDATA[25フレーム１/秒]]>
</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                            <Key frame="10" value="-1.4" />
                                                            <Key frame="15" value="-1.4" />
                                                            <Key frame="30" value="-1.4" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                                            <Key frame="10" value="-1.23047" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                                                            <Key frame="10" value="-16.9969" />
                                                            <Key frame="15" value="-16.7" />
                                                            <Key frame="30" value="-0.711887" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                                                            <Key frame="10" value="-0.263673" />
                                                            <Key frame="15" value="0" />
                                                            <Key frame="30" value="0" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                                                            <Key frame="10" value="-2.9" />
                                                            <Key frame="15" value="-2.9" />
                                                            <Key frame="30" value="-2.9" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="10" value="-65.0391" />
                                                            <Key frame="15" value="-65.0391" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="10" value="-66.7969" />
                                                            <Key frame="15" value="-66.7969" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="10" value="0.5" />
                                                            <Key frame="15" value="0.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="10" value="52.3828" />
                                                            <Key frame="15" value="52.3023" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="10" value="0.527345" />
                                                            <Key frame="15" value="0.527345" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="10" value="-49.5733" />
                                                            <Key frame="15" value="-49.5733" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="10" value="60.3809" />
                                                            <Key frame="15" value="60.3809" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="10" value="61.9629" />
                                                            <Key frame="15" value="61.9629" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="10" value="0.5" />
                                                            <Key frame="15" value="0.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="10" value="44.8242" />
                                                            <Key frame="15" value="44.8519" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="10" value="-3.42773" />
                                                            <Key frame="15" value="-3.42773" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="10" value="47.547" />
                                                            <Key frame="15" value="47.547" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="win" id="9" localization="8" tooltip="こちらに概要を記入" x="650" y="514">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="Animated Say (2)_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                                                <Output name="TextEdit_onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Animated Say (2)" id="3" localization="8" tooltip="Say some text with animations. Note that you must open the box to enter the text." x="225" y="134">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="130" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user. ex: ^start(...) or ^tag(...)&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                                                        <Choice value="disabled" />
                                                                        <Choice value="random" />
                                                                        <Choice value="contextual" />
                                                                    </Parameter>
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Animated Say Text" id="2" localization="8" tooltip="Say the text received on its input and move during its speech." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.animSpeech = ALProxy('ALAnimatedSpeech')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.animSpeech.stop(id)
            except:
                pass

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            configuration =\
            {"speakingMovementMode":self.getParameter("Speaking movement mode")}
            id = self.animSpeech.post.say(str(sentence), configuration)
            self.ids.append(id)
            self.animSpeech.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                        <Parameter name="Speaking movement mode" inherits_from_parent="1" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user. ex: ^start(...) or ^tag(...)&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                                                                            <Choice value="disabled" />
                                                                                            <Choice value="random" />
                                                                                            <Choice value="contextual" />
                                                                                        </Parameter>
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " ^start(animations/Stand/Gestures/Hey_1) مرحبا ^wait(animations/Stand/Gestures/Hey_1) ",
			"Czech" : " ^start(animations/Stand/Gestures/Hey_1) Ahoj ^wait(animations/Stand/Gestures/Hey_1) ",
			"Danish" : " ^start(animations/Stand/Gestures/Hey_1) Hej ^wait(animations/Stand/Gestures/Hey_1) ",
			"German" : " ^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1) ",
			"Greek" : "  ",
			"English" : " ^start(animations/Stand/Gestures/Hey_1) Hello ^wait(animations/Stand/Gestures/Hey_1) ",
			"Spanish" : " ^start(animations/Stand/Gestures/Hey_1) Hola ^wait(animations/Stand/Gestures/Hey_1) ",
			"Finnish" : " ^start(animations/Stand/Gestures/Hey_1) Hei ^wait(animations/Stand/Gestures/Hey_1) ",
			"French" : " ^start(animations/Stand/Gestures/Hey_1) Bonjour ^wait(animations/Stand/Gestures/Hey_1) ",
			"Italian" : " ^start(animations/Stand/Gestures/Hey_1) Ciao ^wait(animations/Stand/Gestures/Hey_1) ",
			"Japanese" : " やーらーれーたー ",
			"Korean" : " ^start(animations/Stand/Gestures/Hey_1) 안녕하세요 ^wait(animations/Stand/Gestures/Hey_1) ",
			"Dutch" : " ^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1) ",
			"Norwegian" : "  ",
			"Polish" : " ^start(animations/Stand/Gestures/Hey_1) Cześć ^wait(animations/Stand/Gestures/Hey_1) ",
			"Brazilian" : " ^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1) ",
			"Portuguese" : " ^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1) ",
			"Russian" : " ^start(animations/Stand/Gestures/Hey_1) Привет ^wait(animations/Stand/Gestures/Hey_1) ",
			"Swedish" : " ^start(animations/Stand/Gestures/Hey_1) Hallå ^wait(animations/Stand/Gestures/Hey_1) ",
			"Turkish" : " ^start(animations/Stand/Gestures/Hey_1) Merhaba ^wait(animations/Stand/Gestures/Hey_1) ",
			"Chinese" : " ^start(animations/Stand/Gestures/Hey_1) 你好 ^wait(animations/Stand/Gestures/Hey_1) "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <arabic>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) مرحبا ^wait(animations/Stand/Gestures/Hey_1)]]>
</arabic>
                                                                                            <czech>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Ahoj ^wait(animations/Stand/Gestures/Hey_1)]]>
</czech>
                                                                                            <danish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hej ^wait(animations/Stand/Gestures/Hey_1)]]>
</danish>
                                                                                            <german>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1)]]>
</german>
                                                                                            <greek>
                                                                                                <![CDATA[]]>
</greek>
                                                                                            <english>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hello ^wait(animations/Stand/Gestures/Hey_1)]]>
</english>
                                                                                            <spanish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hola ^wait(animations/Stand/Gestures/Hey_1)]]>
</spanish>
                                                                                            <finnish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hei ^wait(animations/Stand/Gestures/Hey_1)]]>
</finnish>
                                                                                            <french>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Bonjour ^wait(animations/Stand/Gestures/Hey_1)]]>
</french>
                                                                                            <italian>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Ciao ^wait(animations/Stand/Gestures/Hey_1)]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[やーらーれーたー]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) 안녕하세요 ^wait(animations/Stand/Gestures/Hey_1)]]>
</korean>
                                                                                            <dutch>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1)]]>
</dutch>
                                                                                            <norwegian>
                                                                                                <![CDATA[]]>
</norwegian>
                                                                                            <polish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Cześć ^wait(animations/Stand/Gestures/Hey_1)]]>
</polish>
                                                                                            <brazilian>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1)]]>
</brazilian>
                                                                                            <portuguese>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1)]]>
</portuguese>
                                                                                            <russian>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Привет ^wait(animations/Stand/Gestures/Hey_1)]]>
</russian>
                                                                                            <swedish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallå ^wait(animations/Stand/Gestures/Hey_1)]]>
</swedish>
                                                                                            <turkish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Merhaba ^wait(animations/Stand/Gestures/Hey_1)]]>
</turkish>
                                                                                            <chinese>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) 你好 ^wait(animations/Stand/Gestures/Hey_1)]]>
</chinese>
                                                                                            <language>10</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Text Edit" id="11" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="419" y="16">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("1")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>
                                                                            <![CDATA[1]]>
</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                                                </Box>
                                                                <Box name="yarareta_pose" id="6" localization="8" tooltip="" x="226" y="253">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
                                                                    <Timeline enable="1" fps="25" start_frame="1" end_frame="69" size="69">
                                                                        <ActuatorList model="">
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                                                <Key frame="10" value="36.5" />
                                                                                <Key frame="25" value="36.5" />
                                                                                <Key frame="40" value="36.5" />
                                                                                <Key frame="60" value="36.5" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                                                                <Key frame="10" value="7.20704" />
                                                                                <Key frame="25" value="7.20704" />
                                                                                <Key frame="40" value="7.20704" />
                                                                                <Key frame="60" value="7.20704" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                                                                                <Key frame="10" value="-2.90039" />
                                                                                <Key frame="25" value="-2.90039" />
                                                                                <Key frame="40" value="-2.90039" />
                                                                                <Key frame="60" value="-2.90039" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                                                                                <Key frame="10" value="-0.439454" />
                                                                                <Key frame="25" value="-0.439454" />
                                                                                <Key frame="40" value="-0.439454" />
                                                                                <Key frame="60" value="-0.439454" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                                                                                <Key frame="10" value="-0.263673" />
                                                                                <Key frame="25" value="-0.263673" />
                                                                                <Key frame="40" value="-0.263673" />
                                                                                <Key frame="60" value="-0.263673" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                                                <Key frame="10" value="-56.5137" />
                                                                                <Key frame="25" value="-56.5137" />
                                                                                <Key frame="40" value="-56.5137" />
                                                                                <Key frame="60" value="-56.5137" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                                                <Key frame="10" value="-55.2832" />
                                                                                <Key frame="25" value="-55.2832" />
                                                                                <Key frame="40" value="-55.2832" />
                                                                                <Key frame="60" value="-55.2832" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                                                <Key frame="10" value="0.456942" />
                                                                                <Key frame="25" value="0.456942" />
                                                                                <Key frame="40" value="0.456942" />
                                                                                <Key frame="60" value="0.456942" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                                                <Key frame="10" value="-18.8086" />
                                                                                <Key frame="25" value="-18.8086" />
                                                                                <Key frame="40" value="-18.8086" />
                                                                                <Key frame="60" value="-18.8086" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                                                <Key frame="10" value="0.5" />
                                                                                <Key frame="25" value="0.5" />
                                                                                <Key frame="40" value="0.5" />
                                                                                <Key frame="60" value="0.5" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                                                <Key frame="10" value="-56.6047" />
                                                                                <Key frame="25" value="-56.6047" />
                                                                                <Key frame="40" value="-56.6047" />
                                                                                <Key frame="60" value="-56.6047" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                                                <Key frame="10" value="64.6875" />
                                                                                <Key frame="25" value="64.6875" />
                                                                                <Key frame="40" value="64.6875" />
                                                                                <Key frame="60" value="64.6875" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                                                <Key frame="10" value="67.8516" />
                                                                                <Key frame="25" value="67.8516" />
                                                                                <Key frame="40" value="67.8516" />
                                                                                <Key frame="60" value="67.8516" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                                                <Key frame="10" value="0.329525" />
                                                                                <Key frame="25" value="0.329525" />
                                                                                <Key frame="40" value="0.329525" />
                                                                                <Key frame="60" value="0.329525" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                                                <Key frame="10" value="-18.0176" />
                                                                                <Key frame="25" value="-18.0176" />
                                                                                <Key frame="40" value="-18.0176" />
                                                                                <Key frame="60" value="-18.0176" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                                                <Key frame="10" value="-0.878909" />
                                                                                <Key frame="25" value="-0.878909" />
                                                                                <Key frame="40" value="-0.878909" />
                                                                                <Key frame="60" value="-0.878909" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                                                <Key frame="10" value="50.4474" />
                                                                                <Key frame="25" value="50.4474" />
                                                                                <Key frame="40" value="50.4474" />
                                                                                <Key frame="60" value="50.4474" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Wait" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="220" y="12">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                                    <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                                    <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                                                </Box>
                                                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="3" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="11" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="lose" id="3" localization="8" tooltip="こちらに概要を記入" x="659" y="622">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="Animated Say (1)_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                                                <Output name="TextEdit1_onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Animated Say (1)" id="2" localization="8" tooltip="Say some text with animations. Note that you must open the box to enter the text." x="263" y="140">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="130" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user. ex: ^start(...) or ^tag(...)&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                                                        <Choice value="disabled" />
                                                                        <Choice value="random" />
                                                                        <Choice value="contextual" />
                                                                    </Parameter>
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Animated Say Text" id="2" localization="8" tooltip="Say the text received on its input and move during its speech." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.animSpeech = ALProxy('ALAnimatedSpeech')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.animSpeech.stop(id)
            except:
                pass

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            configuration =\
            {"speakingMovementMode":self.getParameter("Speaking movement mode")}
            id = self.animSpeech.post.say(str(sentence), configuration)
            self.ids.append(id)
            self.animSpeech.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                        <Parameter name="Speaking movement mode" inherits_from_parent="1" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user. ex: ^start(...) or ^tag(...)&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                                                                            <Choice value="disabled" />
                                                                                            <Choice value="random" />
                                                                                            <Choice value="contextual" />
                                                                                        </Parameter>
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " ^start(animations/Stand/Gestures/Hey_1) مرحبا ^wait(animations/Stand/Gestures/Hey_1) ",
			"Czech" : " ^start(animations/Stand/Gestures/Hey_1) Ahoj ^wait(animations/Stand/Gestures/Hey_1) ",
			"Danish" : " ^start(animations/Stand/Gestures/Hey_1) Hej ^wait(animations/Stand/Gestures/Hey_1) ",
			"German" : " ^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1) ",
			"Greek" : "  ",
			"English" : " ^start(animations/Stand/Gestures/Hey_1) Hello ^wait(animations/Stand/Gestures/Hey_1) ",
			"Spanish" : " ^start(animations/Stand/Gestures/Hey_1) Hola ^wait(animations/Stand/Gestures/Hey_1) ",
			"Finnish" : " ^start(animations/Stand/Gestures/Hey_1) Hei ^wait(animations/Stand/Gestures/Hey_1) ",
			"French" : " ^start(animations/Stand/Gestures/Hey_1) Bonjour ^wait(animations/Stand/Gestures/Hey_1) ",
			"Italian" : " ^start(animations/Stand/Gestures/Hey_1) Ciao ^wait(animations/Stand/Gestures/Hey_1) ",
			"Japanese" : " \\pau=1000\\ざんねんでしたー ",
			"Korean" : " ^start(animations/Stand/Gestures/Hey_1) 안녕하세요 ^wait(animations/Stand/Gestures/Hey_1) ",
			"Dutch" : " ^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1) ",
			"Norwegian" : "  ",
			"Polish" : " ^start(animations/Stand/Gestures/Hey_1) Cześć ^wait(animations/Stand/Gestures/Hey_1) ",
			"Brazilian" : " ^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1) ",
			"Portuguese" : " ^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1) ",
			"Russian" : " ^start(animations/Stand/Gestures/Hey_1) Привет ^wait(animations/Stand/Gestures/Hey_1) ",
			"Swedish" : " ^start(animations/Stand/Gestures/Hey_1) Hallå ^wait(animations/Stand/Gestures/Hey_1) ",
			"Turkish" : " ^start(animations/Stand/Gestures/Hey_1) Merhaba ^wait(animations/Stand/Gestures/Hey_1) ",
			"Chinese" : " ^start(animations/Stand/Gestures/Hey_1) 你好 ^wait(animations/Stand/Gestures/Hey_1) "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <arabic>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) مرحبا ^wait(animations/Stand/Gestures/Hey_1)]]>
</arabic>
                                                                                            <czech>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Ahoj ^wait(animations/Stand/Gestures/Hey_1)]]>
</czech>
                                                                                            <danish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hej ^wait(animations/Stand/Gestures/Hey_1)]]>
</danish>
                                                                                            <german>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1)]]>
</german>
                                                                                            <greek>
                                                                                                <![CDATA[]]>
</greek>
                                                                                            <english>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hello ^wait(animations/Stand/Gestures/Hey_1)]]>
</english>
                                                                                            <spanish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hola ^wait(animations/Stand/Gestures/Hey_1)]]>
</spanish>
                                                                                            <finnish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hei ^wait(animations/Stand/Gestures/Hey_1)]]>
</finnish>
                                                                                            <french>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Bonjour ^wait(animations/Stand/Gestures/Hey_1)]]>
</french>
                                                                                            <italian>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Ciao ^wait(animations/Stand/Gestures/Hey_1)]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[\pau=1000\ざんねんでしたー]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) 안녕하세요 ^wait(animations/Stand/Gestures/Hey_1)]]>
</korean>
                                                                                            <dutch>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1)]]>
</dutch>
                                                                                            <norwegian>
                                                                                                <![CDATA[]]>
</norwegian>
                                                                                            <polish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Cześć ^wait(animations/Stand/Gestures/Hey_1)]]>
</polish>
                                                                                            <brazilian>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1)]]>
</brazilian>
                                                                                            <portuguese>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1)]]>
</portuguese>
                                                                                            <russian>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Привет ^wait(animations/Stand/Gestures/Hey_1)]]>
</russian>
                                                                                            <swedish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallå ^wait(animations/Stand/Gestures/Hey_1)]]>
</swedish>
                                                                                            <turkish>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) Merhaba ^wait(animations/Stand/Gestures/Hey_1)]]>
</turkish>
                                                                                            <chinese>
                                                                                                <![CDATA[^start(animations/Stand/Gestures/Hey_1) 你好 ^wait(animations/Stand/Gestures/Hey_1)]]>
</chinese>
                                                                                            <language>10</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Text Edit (1)" id="13" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="532" y="21">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("2")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>
                                                                            <![CDATA[2]]>
</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                                                </Box>
                                                                <Box name="yattane_pose" id="5" localization="8" tooltip="" x="263" y="250">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
                                                                    <Timeline enable="1" fps="25" start_frame="1" end_frame="100" size="100">
                                                                        <ActuatorList model="">
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                                                <Key frame="25" value="6.67969" />
                                                                                <Key frame="50" value="32.4506" />
                                                                                <Key frame="75" value="6.5918" />
                                                                                <Key frame="100" value="6.5918" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                                                                <Key frame="25" value="0" />
                                                                                <Key frame="50" value="0" />
                                                                                <Key frame="75" value="0" />
                                                                                <Key frame="100" value="0" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                                                                                <Key frame="25" value="-0.9668" />
                                                                                <Key frame="50" value="-2.28516" />
                                                                                <Key frame="75" value="-0.9668" />
                                                                                <Key frame="100" value="-0.9668" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                                                                                <Key frame="25" value="0" />
                                                                                <Key frame="50" value="0" />
                                                                                <Key frame="75" value="-0.351564" />
                                                                                <Key frame="100" value="-0.351564" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                                                                                <Key frame="25" value="0.703127" />
                                                                                <Key frame="50" value="-0.439454" />
                                                                                <Key frame="75" value="1.31836" />
                                                                                <Key frame="100" value="1.31836" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                                                <Key frame="25" value="-67.5879" />
                                                                                <Key frame="50" value="-59.502" />
                                                                                <Key frame="75" value="-89.2969" />
                                                                                <Key frame="100" value="-89.2969" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                                                <Key frame="25" value="-88.8574" />
                                                                                <Key frame="50" value="-70.1367" />
                                                                                <Key frame="75" value="-85.6055" />
                                                                                <Key frame="100" value="-85.6055" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                                                <Key frame="25" value="0.391916" />
                                                                                <Key frame="50" value="0.539543" />
                                                                                <Key frame="75" value="-1" />
                                                                                <Key frame="100" value="-1" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                                                <Key frame="25" value="78.1348" />
                                                                                <Key frame="50" value="-4.6582" />
                                                                                <Key frame="75" value="51.5918" />
                                                                                <Key frame="100" value="51.5918" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                                                <Key frame="25" value="0.615236" />
                                                                                <Key frame="50" value="4.74609" />
                                                                                <Key frame="75" value="0.791018" />
                                                                                <Key frame="100" value="0.791018" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                                                <Key frame="25" value="-84.2027" />
                                                                                <Key frame="50" value="-104.5" />
                                                                                <Key frame="75" value="-92.6403" />
                                                                                <Key frame="100" value="-92.6403" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                                                <Key frame="25" value="28.3008" />
                                                                                <Key frame="50" value="28.7402" />
                                                                                <Key frame="75" value="28.5645" />
                                                                                <Key frame="100" value="28.5645" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                                                <Key frame="25" value="68.7305" />
                                                                                <Key frame="50" value="68.291" />
                                                                                <Key frame="75" value="68.4668" />
                                                                                <Key frame="100" value="68.4668" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                                                <Key frame="25" value="0.318102" />
                                                                                <Key frame="50" value="0.323374" />
                                                                                <Key frame="75" value="0.327768" />
                                                                                <Key frame="100" value="0.327768" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                                                <Key frame="25" value="90.0879" />
                                                                                <Key frame="50" value="89.9121" />
                                                                                <Key frame="75" value="89.9121" />
                                                                                <Key frame="100" value="89.9121" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                                                <Key frame="25" value="-6.94337" />
                                                                                <Key frame="50" value="-7.03126" />
                                                                                <Key frame="75" value="-7.03126" />
                                                                                <Key frame="100" value="-7.03126" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                                                <Key frame="25" value="11.5993" />
                                                                                <Key frame="50" value="10.7204" />
                                                                                <Key frame="75" value="10.5446" />
                                                                                <Key frame="100" value="10.5446" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="264" y="26">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                                    <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                                    <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="3" outputowner="13" indexofoutput="3" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="13" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="23" indexofinput="2" outputowner="0" indexofoutput="3" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="3" />
                                            <Link inputowner="9" indexofinput="2" outputowner="23" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="23" indexofoutput="5" />
                                            <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="10" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="8" indexofinput="3" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="4" outputowner="14" indexofoutput="5" />
                                            <Link inputowner="14" indexofinput="4" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="14" indexofinput="2" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="14" indexofinput="4" outputowner="1" indexofoutput="8" />
                                            <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="8" />
                                            <Link inputowner="7" indexofinput="3" outputowner="1" indexofoutput="9" />
                                            <Link inputowner="14" indexofinput="4" outputowner="1" indexofoutput="9" />
                                            <Link inputowner="16" indexofinput="3" outputowner="1" indexofoutput="9" />
                                            <Link inputowner="17" indexofinput="2" outputowner="1" indexofoutput="9" />
                                            <Link inputowner="16" indexofinput="2" outputowner="17" indexofoutput="4" />
                                            <Link inputowner="14" indexofinput="3" outputowner="1" indexofoutput="7" />
                                            <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="7" />
                                            <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                            <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="3" />
                                            <Link inputowner="8" indexofinput="3" outputowner="1" indexofoutput="8" />
                                            <Link inputowner="7" indexofinput="3" outputowner="1" indexofoutput="7" />
                                            <Link inputowner="16" indexofinput="3" outputowner="1" indexofoutput="7" />
                                            <Link inputowner="14" indexofinput="3" outputowner="23" indexofoutput="4" />
                                            <Link inputowner="14" indexofinput="3" outputowner="23" indexofoutput="5" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Comment" id="1" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="1002" y="142">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("result\n1:user win\n2:user lose\n3:timeout\n")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[result
1:user win
2:user lose
3:timeout
]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Box name="Stand Up" id="9" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="656" y="88">
                            <bitmap>media/images/box/movement/stand.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                            <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="StandUpBehavior">
                                    <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                            <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                    <Choice value="Crouch" />
                                                    <Choice value="LyingBack" />
                                                    <Choice value="LyingBelly" />
                                                    <Choice value="Sit" />
                                                    <Choice value="SitRelax" />
                                                    <Choice value="StandInit" />
                                                    <Choice value="Stand" />
                                                    <Choice value="StandZero" />
                                                </Parameter>
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                                <Resource name="Stiffness" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="All motors" type="Lock" timeout="0" />
                        </Box>
                        <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                        <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="4" />
                        <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="4" />
                        <Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
